:- import xsb_error_get_tag/2,xsb_error_get_message/2 from error_handler.

:- table p/2 as index(0).

p(X,Y):- r(X,Y),writeln(p1(X,Y)).

r(a,1).
r(a,2).
r(b,3).
r(b,4).

:- table p/3 as index([1+3,3+2,0]).

p(X,Y,Z) :- r(X,Y),s(Y,Z), writeln(p3(X,Y,Z)).

s(1,u).
s(1,v).
s(3,w).
s(4,x).

test:- p(_X,_Y),fail.
test:- p(a,Y),writeln(p(a,Y)),fail.
test:- p(b,Y),writeln(p(b,Y)),fail.
test:- p(X,3),writeln(p(X,3)),fail.
test:- p(X,Y,Z),writeln(pc(X,Y,Z)),fail.
test:- p(a,Y,v),writeln(pc1(Y)),fail.
test:- p(X,4,x),writeln(pc2(X)),fail.

%----------------------

test:- catch(compile(test_table_index_1),E,(xsb_error_get_tag(E,M),writeln(M))),fail.
test:- catch(p_alt(_X,1,_Y),E,(xsb_error_get_message(E,M),writeln(M))),fail.
test:- catch(table(as(p_bad/2,(dyn,index([0])))),E,(xsb_error_get_message(E,M),writeln(first(M)))),fail.
test:- catch(table(as(p_bad/2,(index([0]),dyn))),E,(xsb_error_get_message(E,M),writeln(second(M)))),fail.
test:- test_abolish,fail.
test.

% Test error on improper call.
:- table p_alt/3 as index([1+3,3+2]).

p_alt(X,Y,Z) :- r(X,Y),s(Y,Z), writeln(p_alt(X,Y,Z)).


:- table p_to_abolish/3 as index([1+3,3+2,0]).

p_to_abolish(X,Y,Z) :- r(X,Y),s(Y,Z).

test_abolish:- p_to_abolish(_X,_Y,_Z),fail.
test_abolish:- get_residual('p_to_abolish$_1_3_2'(A,B,C),_),writeln(no_abolish('p_to_abolish$_1_3_2'(A,B,C))),fail.
test_abolish:- get_residual('p_to_abolish$_2_3_1'(A,B,C),_),writeln(no_abolish('p_to_abolish$_2_3_1'(A,B,C))),fail.
test_abolish:- abolish_table_pred(p_to_abolish(_,_,_)),fail.
test_abolish:- get_residual('p_to_abolish$_1_3_2'(A,B,C),_),writeln(no_abolish('p_to_abolish$_1_3_2'(A,B,C))),fail.
test_abolish:- get_residual('p_to_abolish$_2_3_1'(A,B,C),_),writeln(no_abolish('p_to_abolish$_2_3_1'(A,B,C))),fail.
test_abolish.
