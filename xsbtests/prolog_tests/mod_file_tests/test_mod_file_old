Testing explicit mod (filename): modp >> modp_file : p(A,B)
Testing explicit mod: (with absolute pathmodq >> AbsFN : q(A,B)
Testing explicit mod: (with relative path)modr >> ../../prolog_tests/mod_file_tests/modr_file : r(A,B)
p(1,2)
p(2,3)
p([],[a,b],[a,b])
p([a,b],[],[a,b])
p([a],[b],[a,b])
p(a,b)
p(b,c)
par(dave,carl)
par(dave,carl)
par(david,henry)
par(david,henry)
par(eloise,jonah)
par(eloise,jonah)
par(eloise,lauren)
par(eloise,lauren)
par(esme,dave)
par(esme,dave)
par(esme,tessa)
par(esme,tessa)
par(greta,jonal)
par(greta,jonal)
par(greta,lauren)
par(greta,lauren)
par(jonah,david)
par(jonah,david)
par(jonah,paula)
par(jonah,paula)
par(noa,dave)
par(noa,dave)
par(noa,tessa)
par(noa,tessa)
par(tessa,david)
par(tessa,david)
par(tessa,paula)
par(tessa,paula)
q(1,2)
q(2,3)
q(a,b)
q(b,c)
r(1,2)
r(2,3)
r(4,5)
testing exp: parent parent(mother_us >> mother_us_file,father >> father_file) >> parent_file : out(A,B)
testing exp: parmods parent(mother_us,father) : out(A,B)
testing ext: parmodtst parmodtst(basics) >> ABSFN.P : p(A,B,[a,b])
